{
	"info": {
		"_postman_id": "e626c160-a5d8-4cbe-8940-b62ae7a82df7",
		"name": "Students",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24061076"
	},
	"item": [
		{
			"name": "Student",
			"item": [
				{
					"name": "Add new student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('ivan.petrov@practicummail.ru');\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('Иван');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Иван\",\r\n  \"surname\": \"Петров\",\r\n  \"dateOfBirth\": \"1967-03-25\",\r\n  \"sex\": \"male\",\r\n  \"email\": \"ivan.petrov@practicummail.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/students",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get student with wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students/student/99",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"student",
								"99"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get student with  id  = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('ivan.petrov@practicummail.ru');\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('Иван');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students/student/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"student",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('sidor@mail.ru');\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.name).to.eql('Петр');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Петр\",\r\n  \"surname\": \"Сидоров\",\r\n  \"dateOfBirth\": \"1987-04-25\",\r\n  \"sex\": \"male\",\r\n  \"email\": \"sidor@mail.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/students",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get both students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test get all user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"    pm.expect(jsonData[0].email).to.eql('ivan.petrov@practicummail.ru');\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"    pm.expect(jsonData[0].name).to.eql('Иван');\r",
									"\r",
									"    pm.expect(jsonData[1].email).to.eql('sidor@mail.ru');\r",
									"    pm.expect(jsonData[1].id).to.eql(2);\r",
									"    pm.expect(jsonData[1].name).to.eql('Петр');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update student id = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('ivan.petrov@gmail.ru');\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.dateOfBirth).to.eql('1976-02-21');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"dateOfBirth\": \"1976-02-21\",\r\n   \"email\": \"ivan.petrov@gmail.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/students/student/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"student",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove student id = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"dateOfBirth\": \"1976-02-21\",\r\n   \"email\": \"ivan.petrov@gmail.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/students/student?studentId=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"student"
							],
							"query": [
								{
									"key": "studentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get removed student with  id  = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students/student/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"student",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subject",
			"item": [
				{
					"name": "Add new subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql('Курс математики 5 класс');\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('Математика');\r",
									"    pm.expect(jsonData.startDate).to.eql('2023-09-01');\r",
									"    pm.expect(jsonData.endDate).to.eql('2024-05-31');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Математика\",\r\n  \"description\": \"Курс математики 5 класс\",\r\n  \"startDate\": \"2023-09-01\",\r\n  \"endDate\": \"2024-05-31\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get subject with  id  = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql('Курс математики 5 класс');\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('Математика');\r",
									"    pm.expect(jsonData.startDate).to.eql('2023-09-01');\r",
									"    pm.expect(jsonData.endDate).to.eql('2024-05-31');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/subject/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"subject",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql('Курс руского языка 5 класс');\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.name).to.eql('Русский язык');\r",
									"    pm.expect(jsonData.startDate).to.eql('2023-09-01');\r",
									"    pm.expect(jsonData.endDate).to.eql('2024-05-30');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Русский язык\",\r\n  \"description\": \"Курс руского языка 5 класс\",\r\n  \"startDate\": \"2023-09-01\",\r\n  \"endDate\": \"2024-05-30\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get two subjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test get all user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"\r",
									"    pm.expect(jsonData[0].description).to.eql('Курс математики 5 класс');\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"    pm.expect(jsonData[0].name).to.eql('Математика');\r",
									"    pm.expect(jsonData[0].startDate).to.eql('2023-09-01');\r",
									"    pm.expect(jsonData[0].endDate).to.eql('2024-05-31');\r",
									"\r",
									"    pm.expect(jsonData[1].description).to.eql('Курс руского языка 5 класс');\r",
									"    pm.expect(jsonData[1].id).to.eql(2);\r",
									"    pm.expect(jsonData[1].name).to.eql('Русский язык');\r",
									"    pm.expect(jsonData[1].startDate).to.eql('2023-09-01');\r",
									"    pm.expect(jsonData[1].endDate).to.eql('2024-05-30');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update subject id = 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql('Курс русского языка 5 класс');\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"description\": \"Курс русского языка 5 класс\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects/subject/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"subject",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add student Id = 2 to subject id = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.studentsCount).to.eql(1);\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects/subject/1/student/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"subject",
								"1",
								"student",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Grade",
			"item": [
				{
					"name": "Add new grade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create grade\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.subjectId).to.eql(1);\r",
									"    pm.expect(jsonData.studentId).to.eql(2);\r",
									"    pm.expect(jsonData.grade).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Математика\",\r\n  \"description\": \"Курс математики 5 класс\",\r\n  \"startDate\": \"2023-09-01\",\r\n  \"endDate\": \"2024-05-31\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/grades/1/student/2/?grade=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"grades",
								"1",
								"student",
								"2",
								""
							],
							"query": [
								{
									"key": "grade",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new grade failed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Математика\",\r\n  \"description\": \"Курс математики 5 класс\",\r\n  \"startDate\": \"2023-09-01\",\r\n  \"endDate\": \"2024-05-31\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/grades/2/student/2/?grade=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"grades",
								"2",
								"student",
								"2",
								""
							],
							"query": [
								{
									"key": "grade",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get student with  id  = 2 with grade 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('sidor@mail.ru');\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.name).to.eql('Петр');\r",
									"    pm.expect(jsonData.averageGrade).to.eql(5.0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students/student/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"student",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another grade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create grade\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.subjectId).to.eql(1);\r",
									"    pm.expect(jsonData.studentId).to.eql(2);\r",
									"    pm.expect(jsonData.grade).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Математика\",\r\n  \"description\": \"Курс математики 5 класс\",\r\n  \"startDate\": \"2023-09-01\",\r\n  \"endDate\": \"2024-05-31\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/grades/1/student/2/?grade=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"grades",
								"1",
								"student",
								"2",
								""
							],
							"query": [
								{
									"key": "grade",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get student with  id  = 2 with average grade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('sidor@mail.ru');\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.name).to.eql('Петр');\r",
									"    pm.expect(jsonData.averageGrade).to.eql(4.0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students/student/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"student",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get student's grades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test get all user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"\r",
									"    pm.expect(jsonData[0].studentId).to.eql(2);\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"    pm.expect(jsonData[0].subjectId).to.eql(1);\r",
									"    pm.expect(jsonData[0].grade).to.eql(5);\r",
									"\r",
									"\r",
									"    pm.expect(jsonData[1].studentId).to.eql(2);\r",
									"    pm.expect(jsonData[1].id).to.eql(2);\r",
									"    pm.expect(jsonData[1].subjectId).to.eql(1);\r",
									"    pm.expect(jsonData[1].grade).to.eql(2);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/grades/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"grades",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add third student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('mixa.mix@yandex.ru');\r",
									"    pm.expect(jsonData.id).to.eql(3);\r",
									"    pm.expect(jsonData.name).to.eql('Михаил');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Михаил\",\r\n  \"surname\": \"Михайлов\",\r\n  \"dateOfBirth\": \"1984-03-08\",\r\n  \"sex\": \"male\",\r\n  \"email\": \"mixa.mix@yandex.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/students",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add student Id = 3 to subject id = 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.studentsCount).to.eql(2);\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects/subject/1/student/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"subject",
								"1",
								"student",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new grade student 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create grade\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(3);\r",
									"    pm.expect(jsonData.subjectId).to.eql(1);\r",
									"    pm.expect(jsonData.studentId).to.eql(3);\r",
									"    pm.expect(jsonData.grade).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Математика\",\r\n  \"description\": \"Курс математики 5 класс\",\r\n  \"startDate\": \"2023-09-01\",\r\n  \"endDate\": \"2024-05-31\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/grades/1/student/3/?grade=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"grades",
								"1",
								"student",
								"3",
								""
							],
							"query": [
								{
									"key": "grade",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get students sort by grades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Test get all user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"\r",
									"    pm.expect(jsonData[0].email).to.eql('mixa.mix@yandex.ru');\r",
									"    pm.expect(jsonData[0].id).to.eql(3);\r",
									"    pm.expect(jsonData[0].name).to.eql('Михаил');\r",
									"\r",
									"    pm.expect(jsonData[1].email).to.eql('sidor@mail.ru');\r",
									"    pm.expect(jsonData[1].id).to.eql(2);\r",
									"    pm.expect(jsonData[1].name).to.eql('Петр');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students?sort=DESC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students"
							],
							"query": [
								{
									"key": "sort",
									"value": "DESC"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}